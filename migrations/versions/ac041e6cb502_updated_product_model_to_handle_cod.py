"""Updated product model to handle cod

Revision ID: ac041e6cb502
Revises: 697e5661957c
Create Date: 2025-05-19 20:26:56.912617

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ac041e6cb502'
down_revision = '697e5661957c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('customer', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('verification_token_expires',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_constraint('customer_reset_token_key', type_='unique')
        batch_op.drop_column('reset_token')
        batch_op.drop_column('last_login')
        batch_op.drop_column('is_active')
        batch_op.drop_column('reset_token_expires')

    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.add_column(sa.Column('reserved_stock_s', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('reserved_stock_m', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('reserved_stock_l', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('reserved_stock_xl', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.drop_column('created_at')
        batch_op.drop_column('reserved_stock_xl')
        batch_op.drop_column('reserved_stock_l')
        batch_op.drop_column('reserved_stock_m')
        batch_op.drop_column('reserved_stock_s')

    with op.batch_alter_table('customer', schema=None) as batch_op:
        batch_op.add_column(sa.Column('reset_token_expires', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('reset_token', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.create_unique_constraint('customer_reset_token_key', ['reset_token'])
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('verification_token_expires',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('password',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    # ### end Alembic commands ###
